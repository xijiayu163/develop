模型分析:
对查询业务来说,BizConfig的attachData,key对应各个具体实现类的属性名，value对应属性值
对同步业务来说,BizConfig的attachData,key对应各个具体实现类的属性名，value对应属性值(为一个具体的数据对象)

场景分析:
有多个查询配置，



	
作业配置的更新与通知:
	启动worker,发送消息，表明要获取作业
	服务平台作业配置监听器：监听配置获取请求，如果有，将配置发送到作业配置消息队列(消息队列模式)
	worker作业配置监听器:监听作业配置消息队列
	服务平台作业配置更新或修改，发送作业配置变更信息到作业配置消息队列(消息持久发布订阅模式)
	监听器收到配置信息：暂停接收作业消息。待正在运行的作业完成后，将作业配置更新，并重新开始监听消息.
	
	
	
worker定时作业工作流程(定时作业一般是同步数据任务):
	1 worker启动
	2 读取本地缓存的作业配置，如果没有，则发送消息，表明要获取作业
	3 获取所有作业完毕,提取出定时作业，使用quartz加入到定时调度
	4 定时作业触发，执行其execute方法
	
	
数据同步查询作业:
	前置条件:worker已读完作业配置,并已设置好消息选择器
	1 客户端发起数据平台服务调用:CommonQuery(String bizName, Map Condition): Object  
	2 数据服务平台生成消息,设置消息属性(message.setStringProperty("msgType", msgType);)
	3 数据服务平台将消息投递到队列
	4 worker收到消息,根据msgType找到合适的类定义.BizConfig的具体子类定义.例如SqlBizConfig
	5 创建JobDetail,形如newJob(SqlBizConfig.class).withIdentity("job2", "group1").build();
	6 调用其getJobDataMap().put(String, Object);//调用initParameters方法，初始化参数
	7 生成即时触发器trigger
	8 加入到任务调用sched.scheduleJob(job2, trigger2)
	9 作业触发，调用SqlBizConfig的execute方法,得到返回数据，消息确认并投递到队列

数据异步查询作业:




一次性数据同步作业:


	
	
	
	
	
1 第一次启动worker,通过RPC询问数据服务，得到作业配置.
1.1 定时同步作业:作业配置本身不需要额外的附加数据
	1.1 调用analyzeJob(ObjectMessage),解析成作业
	1.2 读取作业配置，使用Quartz加入到任务调度
	1.3 任务调度触发作业,执行BizConfig的execute方法,执行过程中汇报中间状态
	1.4 执行完成后，获取返回值，将消息确认并将返回值投递到消息队列,由服务平台去接收	
	
	
	
2 收到作业(作业包括作业配置和附加的业务数据)后，通过任务调度启动任务(可以是定时或者即时调用)
3 任务启动，执行处理逻辑,作业完成后，向消息服务器完成确认(通过消息设置消息确认方式，可支持事务控制),并投递作业结果到消息队列
4 数据平台服务收到作业的反馈，处理相应的逻辑






1 监听消息队列
2 收到消息(消息包含BizConfig,即作业配置和附加的业务数据)
3 将收到的作业配置与本地缓存的作业配置进行比对，判断是否存在
4 如果不存在，根据作业配置的触发类型(定时触发或是触发一次),调用Quartz生成任务执行
5 如果存在且不需要更新，不作处理，表明作业配置已经存在且正在任务进程中
6 如果需要更新，则更新作业。
7 作业完成后，向消息队列投递消息，消息包含作业产生的结果以及自身的作业配置

worker内部作业更新:
1 如果作业对应的任务不在运行中，从Quartz任务调度中删除该任务
2 如果作业对应的任务正在运行，待作业完毕后从任务调度中删除该任务
2 生成新的任务到Quartz中



数据转换:在数据平台内部工作
1 对第三方接收到的数据进行转换
2 数据平台



点对多点的模型
消息重新投递
消息中间件支持的队列数


问题:
数据同步是否可以包含多个目的地?即同一个源数据可能会同步到多个源目标. 

